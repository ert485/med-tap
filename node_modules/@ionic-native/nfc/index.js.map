{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/@ionic-native/plugins/nfc/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  Cordova,\n  CordovaProperty,\n  IonicNativePlugin,\n  Plugin\n} from '@ionic-native/core';\nimport { Observable } from 'rxjs/Observable';\ndeclare let window: any;\n\nexport interface NdefEvent {\n  tag: NdefTag;\n}\n\nexport interface NdefRecord {\n  id: any[];\n  payload: number[];\n  tnf: number;\n  type: number[];\n}\n\nexport interface NdefTag {\n  canMakeReadOnly: boolean;\n  id: number[];\n  isWriteable: boolean;\n  maxSize: number;\n  ndefMessage: NdefRecord[];\n  techTypes: string[];\n  type: string;\n}\n\n/**\n * @name NFC\n * @description\n * The NFC plugin allows you to read and write NFC tags. You can also beam to, and receive from, other NFC enabled devices.\n *\n * Use to\n * - read data from NFC tags\n * - write data to NFC tags\n * - send data to other NFC enabled devices\n * - receive data from NFC devices\n *\n * This plugin uses NDEF (NFC Data Exchange Format) for maximum compatibilty between NFC devices, tag types, and operating systems.\n *\n * @usage\n * ```typescript\n * import { NFC, Ndef } from '@ionic-native/nfc';\n *\n * constructor(private nfc: NFC, private ndef: Ndef) { }\n *\n * ...\n *\n * this.nfc.addNdefListener(() => {\n *   console.log('successfully attached ndef listener');\n * }, (err) => {\n *   console.log('error attaching ndef listener', err);\n * }).subscribe((event) => {\n *   console.log('received ndef message. the tag contains: ', event.tag);\n *   console.log('decoded tag id', this.nfc.bytesToHexString(event.tag.id));\n *\n *   let message = this.ndef.textRecord('Hello world');\n *   this.nfc.share([message]).then(onSuccess).catch(onError);\n * });\n *\n * ```\n */\n@Plugin({\n  pluginName: 'NFC',\n  plugin: 'phonegap-nfc',\n  pluginRef: 'nfc',\n  repo: 'https://github.com/chariotsolutions/phonegap-nfc',\n  platforms: ['Android', 'BlackBerry 10', 'Windows', 'Windows Phone 8']\n})\n/**\n * @{ NFC } class methods\n */\n@Injectable()\nexport class NFC extends IonicNativePlugin {\n  /**\n   * Starts the NFCNDEFReaderSession allowing iOS to scan NFC tags.\n   * @param onSuccess\n   * @param onFailure\n   * @returns {Observable<any>}\n   */\n  @Cordova({\n    observable: true,\n    successIndex: 0,\n    errorIndex: 3,\n    clearFunction: 'invalidateSession',\n    clearWithArgs: true\n  })\n  beginSession(onSuccess?: Function, onFailure?: Function): Observable<any> {\n    return;\n  }\n\n  /**\n   * Registers an event listener for any NDEF tag.\n   * @param onSuccess\n   * @param onFailure\n   * @returns {Observable<any>}\n   */\n  @Cordova({\n    observable: true,\n    successIndex: 0,\n    errorIndex: 3,\n    clearFunction: 'removeNdefListener',\n    clearWithArgs: true\n  })\n  addNdefListener(\n    onSuccess?: Function,\n    onFailure?: Function\n  ): Observable<NdefEvent> {\n    return;\n  }\n\n  /**\n   * Registers an event listener for tags matching any tag type.\n   * @param onSuccess\n   * @param onFailure\n   * @returns {Observable<any>}\n   */\n  @Cordova({\n    observable: true,\n    successIndex: 0,\n    errorIndex: 3,\n    clearFunction: 'removeTagDiscoveredListener',\n    clearWithArgs: true\n  })\n  addTagDiscoveredListener(\n    onSuccess?: Function,\n    onFailure?: Function\n  ): Observable<any> {\n    return;\n  }\n\n  /**\n   * Registers an event listener for NDEF tags matching a specified MIME type.\n   * @param mimeType\n   * @param onSuccess\n   * @param onFailure\n   * @returns {Observable<any>}\n   */\n  @Cordova({\n    observable: true,\n    successIndex: 1,\n    errorIndex: 4,\n    clearFunction: 'removeMimeTypeListener',\n    clearWithArgs: true\n  })\n  addMimeTypeListener(\n    mimeType: string,\n    onSuccess?: Function,\n    onFailure?: Function\n  ): Observable<any> {\n    return;\n  }\n\n  /**\n   * Registers an event listener for formatable NDEF tags.\n   * @param onSuccess\n   * @param onFailure\n   * @returns {Observable<any>}\n   */\n  @Cordova({\n    observable: true,\n    successIndex: 0,\n    errorIndex: 3\n  })\n  addNdefFormatableListener(\n    onSuccess?: Function,\n    onFailure?: Function\n  ): Observable<any> {\n    return;\n  }\n\n  /**\n   * Writes an NdefMessage(array of ndef records) to a NFC tag.\n   * @param message {any[]}\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  write(message: any[]): Promise<any> {\n    return;\n  }\n  /**\n   * Makes a NFC tag read only. **Warning** this is permanent.\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  makeReadyOnly(): Promise<any> {\n    return;\n  }\n\n  /**\n   * Shares an NDEF Message(array of ndef records) via peer-to-peer.\n   * @param message An array of NDEF Records.\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  share(message: any[]): Promise<any> {\n    return;\n  }\n\n  /**\n   * Stop sharing NDEF data via peer-to-peer.\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  unshare(): Promise<any> {\n    return;\n  }\n\n  /**\n   * Erase a NDEF tag\n   */\n  @Cordova()\n  erase(): Promise<any> {\n    return;\n  }\n\n  /**\n   * Send a file to another device via NFC handover.\n   * @param uris A URI as a String, or an array of URIs.\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  handover(uris: string[]): Promise<any> {\n    return;\n  }\n\n  /**\n   * Stop sharing NDEF data via NFC handover.\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  stopHandover(): Promise<any> {\n    return;\n  }\n\n  /**\n   * Opens the device's NFC settings.\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  showSettings(): Promise<any> {\n    return;\n  }\n\n  /**\n   * Check if NFC is available and enabled on this device.\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  enabled(): Promise<any> {\n    return;\n  }\n  /**\n   * @{ NFC } class utility methods\n   * for use with\n   */\n  /**\n   * Convert byte array to string\n   * @param bytes {number[]}\n   * @returns {string}\n   */\n  @Cordova({ sync: true })\n  bytesToString(bytes: number[]): string {\n    return;\n  }\n  /**\n   * Convert string to byte array.\n   * @param str {string}\n   * @returns {number[]}\n   */\n  @Cordova({ sync: true })\n  stringToBytes(str: string): number[] {\n    return;\n  }\n  /**\n   * Convert byte array to hex string\n   *\n   * @param bytes {number[]}\n   * @returns {string}\n   */\n  @Cordova({ sync: true })\n  bytesToHexString(bytes: number[]): string {\n    return;\n  }\n}\n/**\n * @hidden\n */\n@Plugin({\n  pluginName: 'NFC',\n  plugin: 'phonegap-nfc',\n  pluginRef: 'ndef'\n})\n/**\n * @description\n * Utility methods for creating ndef records for the ndef tag format.\n * Move records into array before usage. Then pass an array to methods as parameters.\n * Do not pass bytes as parameters for these methods, conversion is built in.\n * For usage with nfc.write() and nfc.share()\n */\n@Injectable()\nexport class Ndef extends IonicNativePlugin {\n  @CordovaProperty\n  TNF_EMPTY: number;\n  @CordovaProperty\n  TNF_WELL_KNOWN: number;\n  @CordovaProperty\n  TNF_MIME_MEDIA: number;\n  @CordovaProperty\n  TNF_ABSOLUTE_URI: number;\n  @CordovaProperty\n  TNF_EXTERNAL_TYPE: number;\n  @CordovaProperty\n  TNF_UNKNOWN: number;\n  @CordovaProperty\n  TNF_UNCHANGED: number;\n  @CordovaProperty\n  TNF_RESERVED: number;\n\n  @CordovaProperty\n  RTD_TEXT: number[];\n  @CordovaProperty\n  RTD_URI: number[];\n  @CordovaProperty\n  RTD_SMART_POSTER: number[];\n  @CordovaProperty\n  RTD_ALTERNATIVE_CARRIER: number[];\n  @CordovaProperty\n  RTD_HANDOVER_CARRIER: number[];\n  @CordovaProperty\n  RTD_HANDOVER_REQUEST: number[];\n  @CordovaProperty\n  RTD_HANDOVER_SELECT: number[];\n\n  @Cordova({ sync: true })\n  record(\n    tnf: number,\n    type: number[] | string,\n    id: number[] | string,\n    payload: number[] | string\n  ): NdefRecord {\n    return;\n  }\n\n  @Cordova({ sync: true })\n  textRecord(\n    text: string,\n    languageCode?: string,\n    id?: number[] | string\n  ): NdefRecord {\n    return;\n  }\n\n  @Cordova({ sync: true })\n  uriRecord(uri: string, id?: number[] | string): NdefRecord {\n    return;\n  }\n\n  @Cordova({ sync: true })\n  absoluteUriRecord(\n    uri: string,\n    payload: number[] | string,\n    id?: number[] | string\n  ): NdefRecord {\n    return;\n  }\n\n  @Cordova({ sync: true })\n  mimeMediaRecord(mimeType: string, payload: string): NdefRecord {\n    return;\n  }\n\n  @Cordova({ sync: true })\n  smartPoster(ndefRecords: any[], id?: number[] | string): NdefRecord {\n    return;\n  }\n\n  @Cordova({ sync: true })\n  emptyRecord(): NdefRecord {\n    return;\n  }\n\n  @Cordova({ sync: true })\n  androidApplicationRecord(packageName: string): NdefRecord {\n    return;\n  }\n\n  @Cordova({ sync: true })\n  encodeMessage(ndefRecords: any): any {\n    return;\n  }\n\n  @Cordova({ sync: true })\n  decodeMessage(bytes: any): any {\n    return;\n  }\n\n  @Cordova({ sync: true })\n  docodeTnf(tnf_byte: any): any {\n    return;\n  }\n\n  @Cordova({ sync: true })\n  encodeTnf(mb: any, me: any, cf: any, sr: any, il: any, tnf: any): any {\n    return;\n  }\n\n  @Cordova({ sync: true })\n  tnfToString(tnf: any): string {\n    return;\n  }\n\n  @CordovaProperty\n  textHelper: TextHelper;\n\n  @CordovaProperty\n  uriHelper: UriHelper;\n}\n\n/**\n * @hidden\n */\n@Plugin({\n  pluginName: 'NFC',\n  plugin: 'phonegap-nfc',\n  pluginRef: 'util'\n})\n@Injectable()\nexport class NfcUtil extends IonicNativePlugin {\n  @Cordova({ sync: true })\n  toHex(i: number): string {\n    return;\n  }\n\n  @Cordova({ sync: true })\n  toPrintable(i: number): string {\n    return;\n  }\n\n  @Cordova({ sync: true })\n  bytesToString(i: number[]): string {\n    return;\n  }\n\n  @Cordova({ sync: true })\n  stringToBytes(s: string): number[] {\n    return;\n  }\n\n  @Cordova({ sync: true })\n  bytesToHexString(bytes: number[]): string {\n    return;\n  }\n\n  @Cordova({ sync: true })\n  isType(record: NdefRecord, tnf: number, type: number[] | string): boolean {\n    return;\n  }\n}\n\nexport class TextHelper extends IonicNativePlugin {\n  decodePayload(data: number[]): string {\n    return;\n  }\n  encodePayload(text: string, lang: string): number[] {\n    return;\n  }\n}\n\nexport class UriHelper extends IonicNativePlugin {\n  decodePayload(data: number[]): string {\n    return;\n  }\n  encodePayload(uri: string): number[] {\n    return;\n  }\n}\n"]}